# {{.package_name}}

[![python](https://upload.wikimedia.org/wikipedia/commons/1/16/Blue_Python_3.10%2B_Shield_Badge.svg)](https://www.python.org)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)
[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)
[![ci](https://github.com/revodatanl/{{.package_name}}/actions/workflows/ci.yml/badge.svg)](https://github.com/revodatanl/{{.package_name}}/actions/workflows/ci.yml)
[![semantic_release](https://github.com/revodatanl/{{.package_name}}/actions/workflows/semantic_release.yml/badge.svg)](https://github.com/revodatanl/{{.package_name}}/actions/workflows/semantic_release.yml)

The `{{.package_name}}` Bundle was generated by using the [RevoData Asset Bundle Template](https://github.com/revodatanl/revo-asset-bundle-templates) version `0.2.0`.

### Pre-requisites

- [Databricks CLI](https://docs.databricks.com/dev-tools/cli/databricks-cli.html) (installed and configured)
- [Git](https://git-scm.com/)

The `{{.package_name}}` Bundle utilizes a `Makefile` to simplify the Databricks Asset Bundle deployment process, although technically this is not a requirement.

## Getting started

To set up a fully configured development environment for this project run the following command:

```bash
make setup
```

This will install:

- [Python](https://www.python.org/): version specified in the `.python-version` file
- [Poetry](https://python-poetry.org/docs/)

The command will use `Poetry` to install the dependencies, set up a virtual environment, activate it, and install the pre-commit hooks.

![make setup](./assets/make-setup.png)

## Modules

To add custom modules to your project, run the following command:

```bash
make module
```

## Development

The following commands are available for development:

```bash
make clean
```

This command deactivates the virtual environment, removes the virtual environment and the `poetry.lock` file, and removes any caches.

```bash
make test
```

This command runs the tests for the project.

![make test](./assets/make-test.png)

## Deployment

To deploy the Bundle to Databricks with ease, use the following commands:

### `dev` environment

To deploy the Bundle to the (default) `dev` target:

```bash
make deploy_dev
```

This will deploy

### `prod` environment

To deploy the Bundle to the `prod` target:

```bash
make deploy_prod
```
